/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.ia;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yash
 */
public class menu extends javax.swing.JFrame {
  DefaultTableModel dtm = new DefaultTableModel();
  DefaultTableModel dtm1 = new DefaultTableModel();
    DefaultTableModel dtm2 = new DefaultTableModel();
    ResultSet rs1,rs2,rs3,rs4,rs5,rs11;
    PreparedStatement ps,pst, prst,pst1,ps5;
   
    String dn="",c="",vnv="",dt="",qt="";
    Statement smt;
    String ft="",sql="",un="",on="";
    Date datenow;
    SpinnerDateModel smb;
   
    JSpinner.DateEditor d;

  
    public void dateset()
    {
//seeting the date
DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
Date date = new Date();
String date1= dateFormat.format(date);
System.out.println();
jLabel12.setText(date1);//jLabel12 is the date textbox
//setting the time
DateFormat dFormat = new SimpleDateFormat("k:mm");
Date d = new Date();
String date2= dFormat.format(d);
System.out.println();
jLabel8.setText(date2);//jLabel8 is the time textbox
    }
     public final void scaleimg()
    {
    
    ImageIcon icon1=new ImageIcon("C:\\Users\\Yash\\Documents\\NetBeansProjects\\Main IA\\src\\main\\ia\\search icon.png");
   
      Image  img1 = icon1.getImage();
    Image iscl1=img1.getScaledInstance(search_icon.getWidth(),search_icon.getHeight(),Image.SCALE_SMOOTH);
    ImageIcon scl1=new ImageIcon(iscl1);
    search_icon.setIcon(scl1);
    }
     
     //database to table
public void retrieve(){
try{//Creating a table model
     
     
    smt=( sql_connection.conneect_DB().createStatement());
            menuTable.setModel(dtm);// linking table to model
            menuTable.setAutoscrolls(true);
            dtm.addColumn("Dish Name");//Adding columns
            dtm.addColumn("Cost");
            dtm.addColumn("Veg/Non-Veg");
            dtm.addColumn("Type");          
            String sql = "select * from menu";           
            pst =  sql_connection.conneect_DB().prepareStatement(sql);
            rs1 = pst.executeQuery();            
            menuTable.setDefaultEditor(Object.class, null);             
            while (rs1.next()){// Adding the dishes to the tables
    dtm.addRow(new Object[] { rs1.getString("Dish_Name"),rs1.getString("Cost"),
                              rs1.getString("veg_nonveg"), rs1.getString("dish_type")});
            }}
    catch (SQLException ex){
        System.out.println(ex);}
}
    /**
     * Creates new form home_page
     */String tn="",oc="occupied";
     
     //get table number
public void tab_number(){
try
{
    tn=JOptionPane.showInputDialog("Enter Table Number");//inputted table number
    //Updating table status in database
    String sql1 = "UPDATE tables SET user='"+un+"',status='"+oc+"' Where tab_number='"+tn+"'";
    pst = sql_connection.conneect_DB().prepareStatement(sql1);
    int i=0;
    i=pst.executeUpdate();
    if(i==1)
        JOptionPane.showMessageDialog(null, "Record has been Updated!");
}
catch (SQLException ex){
    Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
}
}

 public menu() {
        initComponents();
        
        
          bg.setIcon(sql_connection.scaleimg(bg.getWidth(),bg.getHeight()));
        scaleimg();
         retrieve();
         dateset();
         
 }
 
    public menu(String username){
        initComponents();
          bg.setIcon(sql_connection.scaleimg(bg.getWidth(),bg.getHeight()));
          scaleimg();
     un=username;
        retrieve();
        search_box.setBackground(new java.awt.Color(0,0,0,1));
        jLabel11.setText(un);
        dateset();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        search_icon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        search_box = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        filters = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        vegonly = new javax.swing.JCheckBox();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        dish_name = new javax.swing.JLabel();
        cost = new javax.swing.JLabel();
        veg_nonveg = new javax.swing.JLabel();
        dish_type = new javax.swing.JLabel();
        ordernum = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_iconMouseClicked(evt);
            }
        });
        jPanel1.add(search_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 50, 40));

        jLabel1.setFont(new java.awt.Font("Segoe Script", 1, 36)); // NOI18N
        jLabel1.setText("Welcome to Ash Cafe !");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        search_box.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        search_box.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(search_box, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 148, 388, -1));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel3.setText("Search");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 123, -1, -1));

        filters.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-select-", "starter", "Main Course", "Dessert", "" }));
        filters.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtersItemStateChanged(evt);
            }
        });
        jPanel1.add(filters, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 145, 225, -1));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel4.setText("Add Filters");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 123, -1, -1));

        vegonly.setText("Show Veg Only");
        vegonly.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                vegonlyItemStateChanged(evt);
            }
        });
        vegonly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vegonlyActionPerformed(evt);
            }
        });
        jPanel1.add(vegonly, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 210, -1, -1));

        jSpinner1.setValue(1);
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        jPanel1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 480, 136, -1));

        jLabel5.setText("Your Selection:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 16)); // NOI18N
        jLabel6.setText("Quantity:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 450, -1, -1));

        jButton2.setBackground(new java.awt.Color(51, 204, 0));
        jButton2.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jButton2.setText("Order this");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 530, 90, 30));
        jPanel1.add(dish_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 135, 26));
        jPanel1.add(cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 480, 144, 26));
        jPanel1.add(veg_nonveg, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 480, 132, 26));
        jPanel1.add(dish_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 480, 146, 26));

        ordernum.setText("Time-");
        jPanel1.add(ordernum, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 50, 20));

        menuTable.setBorder(new javax.swing.border.MatteBorder(null));
        menuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        menuTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(menuTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 257, 812, 170));

        jLabel2.setText("Date- ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, -1, -1));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 80, 112, 20));

        jLabel9.setText("Reset Table");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 210, -1, -1));

        jLabel10.setText("User - ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, -1, -1));
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 112, 20));
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 50, 112, 20));

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 840, 590));

        bg.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel3.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 670));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 940, 670));

        jPanel2.setBackground(new java.awt.Color(153, 102, 0));

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Cart");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Reserve Table");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("MENU");
        jLabel7.setOpaque(true);

        jButton1.setText("Log Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jButton5)
                .addGap(56, 56, 56)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 670));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Place Order
        try{//generating order number            
            ResultSet ct;//defining result set for statement smt 
            ct = smt.executeQuery("select Max(ordernum)from orders");
            ct.next();
            String m=ct.getString("Max(ordernum)");//getting maximum order number

            if(m== null){//checking if no orders exist
                ordernum.setText("001");}//setting ordernumber as 001               
            else{
                Long enroll = Long.parseLong(ct.getString("Max(ordernum)")
                        .substring(2,ct.getString("Max(ordernum)").length()));
                enroll++;//getting max order number adding 1 ro it
                ordernum.setText(String.format("%03d",enroll));//converting long to string                
            }//inserting into database
            on=ordernum.getText();//getting ordernum in a variable              
            ps5=sql_connection.conneect_DB().prepareStatement("insert into orders values(?,?,?,?,?,?,?,?)");
            ps5.setString(1, on);//inserting into database
            ps5.setString(2,un);//username
            ps5.setString(3, dish_name.getText() );//dishname
            ps5.setString(4, String.valueOf(jSpinner1.getValue()));//quantity
            ps5.setString(5, cost.getText());//total cost
            ps5.setString(6, veg_nonveg.getText());//veg/non-veg
            ps5.setString(7, dish_type.getText());//dish type
            ps5.setString(8, "pending...");//status                  
           int i= ps5.executeUpdate();//executing update
           if(i==1)//checking if database updates
                    JOptionPane.showMessageDialog(null,"Order Placed successfully successfully");
             } catch (SQLException ex) {Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);}
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
//change quantity
        int selcrow = menuTable.getSelectedRow();
        menuTable.setEnabled(true);

        int table_value=Integer.valueOf(dtm.getValueAt(selcrow,1).toString());

        int spinner=Integer.valueOf(String.valueOf(jSpinner1.getValue()));
        String k=String.valueOf(table_value*spinner);
        cost.setText(k);
    }//GEN-LAST:event_jSpinner1StateChanged

    private void vegonlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vegonlyActionPerformed
        //show only veg dishes
        try{
            filters.setSelectedItem("-select-");
            menuTable.setModel(dtm);
            if(vegonly.isSelected()){//checking if box is selected
                sql = "select * from menu where Veg_Nonveg='veg'";}
            else{
                sql= "select * from menu";}
            int trow=dtm.getRowCount();//getting number of rows
            for(int i=trow-1;i>=0;i--){
                dtm.removeRow(i);}//removing all rows
            pst = sql_connection.conneect_DB().prepareStatement(sql);
            rs3 = pst.executeQuery();
            menuTable.setDefaultEditor(Object.class, null);
            while (rs3.next()){//Adding Veg DIshes 
                dtm.addRow(new Object[] { rs3.getString("Dish_Name"),
      rs3.getString("Cost"), rs3.getString("Veg_Nonveg"), rs3.getString("Dish_Type")});}
        }
        catch (SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_vegonlyActionPerformed

    private void vegonlyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_vegonlyItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_vegonlyItemStateChanged

    private void filtersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtersItemStateChanged
           //apply filters to menu
        try{
            if(String.valueOf(filters.getSelectedItem()).equalsIgnoreCase("-select-"))
            {}
            else{
            vegonly.setSelected(false);
            menuTable.setModel(dtm);//Link table to table Model
            //Select filtered dishes 
            pst=sql_connection.conneect_DB().prepareStatement("SELECT * FROM menu WHERE dish_type=?");
            pst.setString(1,String.valueOf(filters.getSelectedItem()));//get filter from combo-box
            rs4=pst.executeQuery();
            if(rs4.next()==false){
                JOptionPane.showMessageDialog(this,"Dish not available");}
            else{
                int trow=dtm.getRowCount();//get no. of rows in table
                for(int i=trow-1;i>=0;i--){
                    dtm.removeRow(i);}//Delete all rows in the table
                menuTable.setDefaultEditor(Object.class, null);
                while(rs4.next()){//Add rows with filtered dishes
                dtm.addRow(new Object[] { rs4.getString("dish_name"),rs4.getString("cost"), 
                                 rs4.getString("veg_nonveg"), rs4.getString("dish_type")});}
                dish_name.setText("");//Set all textboxes to empty
                cost.setText("");
                veg_nonveg.setText("");
                dish_type.setText("");
        }}}
        catch(SQLException ex){}
    }//GEN-LAST:event_filtersItemStateChanged

    private void menuTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTableMouseClicked
        // TODO add your handling code here:
        //table to label
        try{
            menuTable.setModel(dtm);
            int selcrow = menuTable.getSelectedRow();
            menuTable.setEnabled(true);

            dish_name.setText(dtm.getValueAt(selcrow,0).toString());
            cost.setText(dtm.getValueAt(selcrow,1).toString());
            veg_nonveg.setText(dtm.getValueAt(selcrow,2).toString());
            dish_type.setText(dtm.getValueAt(selcrow,3).toString());
            
        }
         catch(Exception ex)
        {

        }
    }//GEN-LAST:event_menuTableMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //go to cart
       
         cart cart=new cart(jLabel11.getText());
        cart.setVisible(true);
                this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        //go to reservations
        reserve rv=new reserve(jLabel11.getText());
        rv.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

  @SuppressWarnings("empty-statement")
    private void search_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_iconMouseClicked
          //search menu
          try {            
            String xp2 = search_box.getText();//getting the searched dish
            //searching in the database
            String sql1 ="SELECT * FROM `menu` WHERE `dish_name` = '"+xp2+"'";
            PreparedStatement ps1 = sql_connection.conneect_DB().prepareStatement(sql1);
            rs11 = ps1.executeQuery();
            if(rs11.next()==false){//checking if dish is found
                JOptionPane.showMessageDialog(this,"DIsh is not available");
                search_box.setText("");}
            else{
            int trow=dtm.getRowCount();//number of rows in menuTable            
            menuTable.setModel(dtm);
            menuTable.setAutoscrolls(true);          
            String sql = "select * from menu";
            menuTable.setDefaultEditor(Object.class, null);
            //Deleting existing rows
            for(int i=trow-1;i>=0;i--){
                dtm.removeRow(i);
            }
           
                //adding new rows         
                dtm.addRow(new Object[] { rs11.getString("dish_name"),rs11.getString("cost"),
                                 rs11.getString("veg_nonveg"), rs11.getString("dish_type")});
            }}
        catch (Exception e){JOptionPane.showMessageDialog(null, e);}
    }//GEN-LAST:event_search_iconMouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
      try {
          // TODO add your handling code here:
          filters.setSelectedItem("-select-");
          vegonly.setSelected(false);
          int trow=dtm.getRowCount();
          for(int i=trow-1;i>=0;i--){
              dtm.removeRow(i);
          }
          String sql = "select * from menu";
          
          pst =  sql_connection.conneect_DB().prepareStatement(sql);
          rs1 = pst.executeQuery();
          
          menuTable.setDefaultEditor(Object.class, null);
          
          while (rs1.next())
          {
              
              dtm.addRow(new Object[] { rs1.getString("Dish_Name"),rs1.getString("Cost"), rs1.getString("veg_nonveg"), rs1.getString("dish_type")});
          }
           dish_name.setText("");
            cost.setText("");
            veg_nonveg.setText("");
            dish_type.setText("");
            search_box.setText("");
      } catch (SQLException ex) {
          Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
      }
                    
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new login().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JLabel cost;
    private javax.swing.JLabel dish_name;
    private javax.swing.JLabel dish_type;
    private javax.swing.JComboBox<String> filters;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable menuTable;
    private javax.swing.JLabel ordernum;
    private javax.swing.JTextField search_box;
    private javax.swing.JLabel search_icon;
    private javax.swing.JLabel veg_nonveg;
    private javax.swing.JCheckBox vegonly;
    // End of variables declaration//GEN-END:variables
}
